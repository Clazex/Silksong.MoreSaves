<Project Sdk="Microsoft.NET.Sdk">
	<!--
		Imports silksong path properties only if present in order to allow CI
		builds. The file should be gitignored.
		If you are checking out from git and need to create a new one, you can
		use `dotnet new silksongpath` to generate one.
	-->
	<Import Condition="Exists('SilksongPath.props')" Project="SilksongPath.props" />

	<PropertyGroup>
		<TargetFramework>netstandard2.1</TargetFramework>
		<LangVersion>preview</LangVersion>
		<Nullable>enable</Nullable>
		<EnableNETAnalyzers>true</EnableNETAnalyzers>
		<AnalysisMode>Recommended</AnalysisMode>
		<!-- Allow access of private members at runtime. -->
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<!-- Disable architecture mismatch warning -->
		<NoWarn>$(NoWarn);MSB3270</NoWarn>
	</PropertyGroup>

	<PropertyGroup Condition="$(Configuration) == 'Release'">
		<IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
		<PathMap>$([System.IO.Path]::GetFullPath('$(MSBuildProjectDirectory)'))=./</PathMap>
	</PropertyGroup>

	<PropertyGroup>
		<!-- These properties will control the generated plugin info -->
		<AssemblyTitle>MoreSaves</AssemblyTitle>
		<Version>0.2.0</Version>
	</PropertyGroup>

	<PropertyGroup>
		<Description>Allows you to have more saves</Description>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<Copyright>Copyright © 2025 Clazex</Copyright>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<PackageProjectUrl>https://github.com/Clazex/Silksong.MoreSaves#readme</PackageProjectUrl>
		<RepositoryUrl>https://github.com/Clazex/Silksong.MoreSaves</RepositoryUrl>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="BepInEx.Analyzers" Version="1.0.8" PrivateAssets="all" />
		<PackageReference Include="BepInEx.Core" Version="5.4.21" />
		<PackageReference Include="Hamunii.BepInEx.AutoPlugin" Version="2.0.1" PrivateAssets="all" />

		<PackageReference Include="Microsoft.Unity.Analyzers" Version="1.25.0" PrivateAssets="all" />
		<PackageReference Include="PolySharp" Version="1.15.0">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		
		<PackageReference Include="UnityEngine.Modules" Version="6000.0.50" IncludeAssets="compile" />
		<PackageReference Include="Silksong.GameLibs" Version="1.1.0-silksong1.0.28714" />

		<PackageReference Include="Fody" Version="6.9.3">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="InfoOf.Fody" Version="2.2.0" />
	</ItemGroup>

	<ItemGroup>
		<None Include="../*.*">
			<Link>SolutionFiles/%(FileName)%(Extension)</Link>
		</None>
		<None Include="../Thunderstore/**/*.*">
			<Link>Thunderstore/%(RecursiveDir)%(FileName)%(Extension)</Link>
		</None>
	</ItemGroup>

	<Target Name="CopyMod" AfterTargets="PostBuildEvent" Condition="'$(OutputFolder)' != ''">
		<ItemGroup>
			<OutputFiles Include="$(TargetPath)" />
			<OutputFiles Include="$(TargetDir)/$(TargetName).pdb" />
		</ItemGroup>

		<Copy SourceFiles="@(OutputFiles)" DestinationFolder="$(OutputFolder)/BepInEx/plugins/$(TargetName)" />
	</Target>

	<Target Name="CreateCommonZip" AfterTargets="PostBuildEvent" Condition="$(Configuration) == 'Release'">
		<ItemGroup>
			<OutputFiles Include="$(TargetPath)" />
			<OutputFiles Include="$(TargetDir)/$(TargetName).pdb" />
			<OutputFiles Include="$(MSBuildProjectDirectory)/../README.md" />
			<OutputFiles Include="$(MSBuildProjectDirectory)/../LICENSE" />
		</ItemGroup>

		<PropertyGroup>
			<TempFolder>$(IntermediateOutputPath)/Zip</TempFolder>
			<PublishFolder>../dist</PublishFolder>
		</PropertyGroup>

		<RemoveDir Directories="$(TempFolder)" />
		<MakeDir Directories="$(PublishFolder)" />
		<Copy SourceFiles="@(OutputFiles)" DestinationFolder="$(TempFolder)/BepInEx/plugins/$(TargetName)" />
		<ZipDirectory SourceDirectory="$(TempFolder)" DestinationFile="$(PublishFolder)/$(TargetName)-v$(Version).zip" Overwrite="True" />
	</Target>

	<Target Name="CreateThunderstoreZip" AfterTargets="PostBuildEvent" Condition="$(Configuration) == 'Release'">
		<ItemGroup>
			<OutputFiles Include="$(TargetPath)" />
			<OutputFiles Include="$(TargetDir)/$(TargetName).pdb" />
			<OutputFiles Include="$(MSBuildProjectDirectory)/../README.md" />
			<OutputFiles Include="$(MSBuildProjectDirectory)/../LICENSE" />
			<OutputFiles Include="$(MSBuildProjectDirectory)/../CHANGELOG.md" />
			<OutputFiles Include="$(MSBuildProjectDirectory)/../Thunderstore/**" />
		</ItemGroup>

		<PropertyGroup>
			<TempFolder>$(IntermediateOutputPath)/Thunderstore</TempFolder>
			<PublishFolder>../dist</PublishFolder>
		</PropertyGroup>

		<RemoveDir Directories="$(TempFolder)" />
		<MakeDir Directories="$(PublishFolder)" />
		<Copy SourceFiles="@(OutputFiles)" DestinationFolder="$(TempFolder)" />
		<ZipDirectory SourceDirectory="$(TempFolder)" DestinationFile="$(PublishFolder)/$(TargetName)-v$(Version)-Thunderstore.zip" Overwrite="True" />
	</Target>
</Project>
